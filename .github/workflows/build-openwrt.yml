name: 💻 Build OpenWrt (x86_64)
on:
  workflow_dispatch:
    inputs:
      lan_addr:
        description: "设置默认 LAN 地址"
        default: "192.168.1.10"
        required: true
        type: string
      root_password:
        description: "默认 root 密码（可选，默认 password）"
        default: "password"
        required: false
        type: string
      docker:
        description: "编译 Docker"
        type: boolean
        default: true
      ssrp:
        description: "编译 ShadowSocksR Plus+"
        type: boolean
        default: true
      passwall:
        description: "编译 Passwall"
        type: boolean
        default: true
      nikki:
        description: "编译 Nikki"
        type: boolean
        default: true
      openclash:
        description: "编译 OpenClash"
        type: boolean
        default: true
      lucky:
        description: "编译 Lucky"
        type: boolean
        default: true
      oaf:
        description: "编译 OpenAppFilter"
        type: boolean
        default: true
env:
  REPO_URL: openwrt/openwrt
  REPO_BRANCH: openwrt-24.10
  CACHE_VER: v2 # 如果你想强制刷新缓存，可以修改这个值
  CONFIG_FILE: configs/x86_64.config
  DIY_SCRIPT: scripts/diy-x86_64.sh
  CLASH_KERNEL: amd64
  UPLOAD_BIN_DIR: false
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: X86_64
jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 360 # 缩短总超时，6小时太长了，优化后应该在3小时内
    steps:
      - name: Setup environment
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          # 设置 ccache 配置以获得更好的缓存命中率
          echo "max_size = 5.0G" > $HOME/.ccache/ccache.conf
      - name: Free disk space
        uses: sbwml/actions@free-disk
      - name: Checkout Action main repository
        uses: actions/checkout@v4
        with:
          # 只检出包含配置文件和脚本的主仓库
          path: main-repo
      - name: Checkout OpenWrt source code
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_URL }}
          ref: ${{ env.REPO_BRANCH }}
          path: openwrt
          fetch-depth: 1 # 浅克隆，加快速度
      - name: Set up build environment and variables
        id: setup
        run: |
          cd openwrt
          echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
          # 获取一次 commit 信息
          COMMIT_INFO=$(git show -s --format='
          COMMIT_AUTHOR: 作者: %an
          COMMIT_DATE: 时间: %ci
          COMMIT_MESSAGE: 内容: %s
          COMMIT_HASH: hash: %H
          ')
          echo "$COMMIT_INFO" >> $GITHUB_ENV
          echo "CURRENT_DATE=$(date +%s)" >> $GITHUB_ENV
          
          # 【重要修正】获取最新稳定版 Tag 的正确方法
          # openwrt/openwrt 没有 'latest' release，需要从 tags 获取
          latest_release=$(curl -s "https://api.github.com/repos/openwrt/openwrt/tags" | jq -r '.[].name' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1 | sed 's/^v//')
          if [ -z "$latest_release" ]; then
            echo "::warning::Failed to fetch latest tag, using fallback."
            latest_release="24.10.x" # 或者一个已知的版本
          fi
          echo "latest_release=$latest_release" >> $GITHUB_ENV
          echo "Latest release tag determined: $latest_release"
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev libncursesw5-dev zlib1g-dev libssl-dev rsync
      - name: Cache Downloads
        uses: actions/cache@v4
        with:
          path: openwrt/dl
          key: dl-${{ runner.os }}-${{ env.CACHE_VER }}-${{ hashFiles('main-repo/configs/**') }}
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ccache-${{ runner.os }}-${{ env.CACHE_VER }}-${{ env.REPO_BRANCH }}-${{ hashFiles('openwrt/.config') }}
          max-size: 5G
      - name: Install Feeds
        run: |
          cd ${{ env.OPENWRT_PATH }}
          cp ${{ github.workspace }}/main-repo/feeds.conf.default .
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Load Custom Configuration & DIY Script
        env:
          LAN: ${{ github.event.inputs.lan_addr }}
          ROOT_PASSWORD: ${{ github.event.inputs.root_password }}
          ENABLE_DOCKER:     ${{ github.event.inputs.docker }}
          ENABLE_SSRP:       ${{ github.event.inputs.ssrp }}
          ENABLE_PASSWALL:   ${{ github.event.inputs.passwall }}
          ENABLE_NIKKI:      ${{ github.event.inputs.nikki }}
          ENABLE_OPENCLASH:  ${{ github.event.inputs.openclash }}
          ENABLE_LUCKY:      ${{ github.event.inputs.lucky }}
          ENABLE_OAF:        ${{ github.event.inputs.oaf }}
        run: |
          cd ${{ env.OPENWRT_PATH }}
          # 复制基础配置文件
          cp ${{ github.workspace }}/main-repo/${{ env.CONFIG_FILE }} .config
          # 按需追加配置
          # ... cat ... >> .config 的逻辑保持不变，但路径要改为 ${{ github.workspace }}/main-repo/...
          # 执行 DIY 脚本
          chmod +x ${{ github.workspace }}/main-repo/${{ env.DIY_SCRIPT }}
          ${{ github.workspace }}/main-repo/${{ env.DIY_SCRIPT }}
          # ... 执行其他脚本 ...
          # 生成最终 .config
          make defconfig
      - name: Download packages
        run: |
          cd ${{ env.OPENWRT_PATH }}
          make download -j$(nproc)
      - name: Compile Firmware
        id: compile
        run: |
          cd ${{ env.OPENWRT_PATH }}
          echo -e "Starting compile with $(nproc) threads"
          make -j$(nproc) || make -j1 V=s # V=s 会在失败时打印详细日志
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FILE_DATE=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
          echo "KERNEL=$(cat *.manifest | grep ^kernel | cut -d- -f2 | tr -d ' ')" >> $GITHUB_ENV
          # ... 其他输出变量 ...
      # ... 后续的整理文件、上传等步骤保持不变 ...
      # 记得将路径中的 $GITHUB_WORKSPACE 替换为 ${{ github.workspace }}/main-repo
      # 将 $OPENWRT_PATH 替换为 ${{ env.OPENWRT_PATH }}
      - name: Check space usage
        if: always()
        run: df -hT
      - name: Organise files
        if: steps.compile.outputs.status == 'success'
        run: |
          echo "::group::Organise files"
          cd $OPENWRT_PATH/bin/targets/*/*
          cat sha256sums
          cp $OPENWRT_PATH/.config build.config
          mkdir -p kernel
          mv -f packages/* kernel
          tar -zcf kernel.tar.gz kernel
          rm -rf packages feeds.buildinfo version.buildinfo kernel
          echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV
          echo "::endgroup::"
      # 可选上传 bin 目录
      - name: Upload Bin Directory (optional)
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SOURCE_REPO }}-bin-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}-${{ env.FILE_DATE }}
          path: ${{ env.OPENWRT_PATH }}/bin
      # 上传 firmware 到 Artifact（不发布到 Release 时用）
      - name: Upload Firmware to Artifact (when not releasing)
        if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SOURCE_REPO }}-firmware-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}-${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE_PATH }}
      # 上传到github Release
      - name: Upload Firmware to Release
        if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
        uses: ncipollo/release-action@v1.14.0
        with:
          name: ${{ env.FILE_DATE }}-${{ env.FIRMWARE_TAG }}-${{ env.latest_release }}
          tag: ${{ env.FIRMWARE_TAG }}-OpenWrt-${{ env.latest_release }}-${{ env.FILE_DATE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifacts: ${{ env.FIRMWARE_PATH }}/*
          body: |
            **This is OpenWrt Firmware**
            ### 📒 固件信息
            - 💻 平台架构: ${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
            - ⚽ 固件源码: ${{ env.REPO_URL }}
            - 💝 源码分支: ${{ env.REPO_BRANCH }}
            - 🚀 内核版本: ${{ env.KERNEL }}
            - 🌐 默认地址: ${{ env.IP_ADDR }}
            - 🔑 默认密码: ${{ env.ROOT_PASSWORD }}
            ### 🧊 固件版本
            - 编译前源码最新提交
            - ${{ env.COMMIT_AUTHOR }}
            - ${{ env.COMMIT_DATE }}
            - ${{ env.COMMIT_MESSAGE }}
            - ${{ env.COMMIT_HASH }}
